name: CI/CD to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPO_NAME: vmp-java
      IMAGE_TAG: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
          docker tag $ECR_REPO_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          debug: true
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION
          script: |
            bash -s <<'EOF'
              cd /home/ec2-user
              curl -O https://raw.githubusercontent.com/yogeshdh29/vmp-java/main/scripts/deploy.sh
              chmod +x deploy.sh
              ./deploy.sh ${{ steps.login-ecr.outputs.registry }}/vmp-java latest
            EOF

      - name: Install Helm
        uses: azure/setup-helm@v3
        token: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name vmp-eks-cluster --region $AWS_REGION

      - name: Check Kubernetes contexts
        run: |
          kubectl config get-contexts
          kubectl config current-context

      - name: Verify Kubernetes Access
        run: kubectl get nodes

      - name: Check Helm version
        run: helm version

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install vmp-java ./helm/vmp-java \
            --set image.repository=${{ steps.login-ecr.outputs.registry }}/vmp-java \
            --set image.tag=latest
